/*
 * Copyright 2024 RAW Labs S.A.
 *
 * Use of this software is governed by the Business Source License
 * included in the file licenses/BSL.txt.
 *
 * As of the Change Date specified in that file, in accordance with
 * the Business Source License, use of this software will be governed
 * by the Apache License, Version 2.0, included in the file
 * licenses/APL.txt.
 */

syntax = "proto3";

option java_package = "com.rawlabs.protocol.das.v1.services";
option java_multiple_files = true;

package com.rawlabs.protocol.das.v1.services;

import "com/rawlabs/protocol/das/v1/common/das.proto";
import "com/rawlabs/protocol/das/v1/common/environment.proto";
import "com/rawlabs/protocol/das/v1/functions/functions.proto";
import "com/rawlabs/protocol/das/v1/types/values.proto";

service FunctionsService {

  rpc GetFunctionDefinitions (GetFunctionDefinitionsRequest) returns (GetFunctionDefinitionsResponse);

  rpc ExecuteFunction (ExecuteFunctionRequest) returns (ExecuteFunctionResponse);

}

message GetFunctionDefinitionsRequest {
  com.rawlabs.protocol.das.v1.common.DASId das_id = 1;
  optional com.rawlabs.protocol.das.v1.common.Environment env = 99;
}

message GetFunctionDefinitionsResponse {
  repeated com.rawlabs.protocol.das.v1.functions.FunctionDefinition definitions = 1;
}

message ExecuteFunctionRequest {
  com.rawlabs.protocol.das.v1.common.DASId das_id = 1;
  com.rawlabs.protocol.das.v1.functions.FunctionId function_id = 2;
  repeated Argument args = 3;
  optional com.rawlabs.protocol.das.v1.common.Environment env = 99;
}

message Argument {
  oneof value {
    com.rawlabs.protocol.das.v1.types.Value arg = 1;
    NamedArgument named_arg = 2;
  }
}

message NamedArgument {
  string name = 1;
  com.rawlabs.protocol.das.v1.types.Value value = 2;
}

message ExecuteFunctionResponse {
  com.rawlabs.protocol.das.v1.types.Value output = 1;
}
